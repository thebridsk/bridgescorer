package com.github.thebridsk.bridge.pages.hand

import scala.scalajs.js
import japgolly.scalajs.react.vdom.html_<^._
import japgolly.scalajs.react._
import com.github.thebridsk.bridge.data.bridge.ContractTricks
import com.github.thebridsk.bridge.data.bridge._
import com.github.thebridsk.bridge.react.Utils._

/**
 * A skeleton component.
 *
 * To use, just code the following:
 *
 * <pre><code>
 * Component( Component.Props( ... ) )
 * </code></pre>
 *
 * @author werewolf
 */
object ViewVulnerability {

  type CallbackVul = (Vulnerability)=>Callback

  case class Props( nsVul: Vulnerability, ewVul: Vulnerability, nsCallback: Option[CallbackVul], ewCallback: Option[CallbackVul] )

  def apply( nsVul: Vulnerability, ewVul: Vulnerability, nsCallback: Option[CallbackVul], ewCallback: Option[CallbackVul] ) =
    component(Props(nsVul,ewVul,nsCallback,ewCallback))

  private val component = ScalaComponent.builder[Props]("ViewVulnerability")
                            .render_P( props => {
                                import HandStyles._
                                def getButtonVul(value: Vulnerability, setter: Option[CallbackVul], id: String) = {
                                  <.button( ^.`type` := "button",
                                            ^.disabled := setter.isEmpty,
                                            ^.id:=id,
                                            setter.whenDefined { cb =>
                                              ^.onClick --> cb(if (value==Vul) NotVul; else Vul )
                                            },
                                            value == Vul ?= handStyles.vulnerable,
                                            value match {
                                              case NotVul => "Not Vul"
                                              case Vul => "Vul"
                                            }
                                          )
                                }

                                <.div( handStyles.viewVulnerability,
                                    <.table(
                                        <.thead(
                                          <.tr(
                                            <.td(),
                                            <.td( "Vulnerability" )
                                          )
                                        ),
                                        <.tbody(
                                          <.tr(
                                            <.td(^.colSpan :=1, ^.textAlign := "right", "NS: " ),
                                            <.td(^.colSpan :=1, ^.textAlign := "left", getButtonVul(props.nsVul, props.nsCallback,"nsVul") )
                                          ),
                                          <.tr(
                                            <.td(^.colSpan :=1, ^.textAlign := "right", "EW: " ),
                                            <.td(^.colSpan :=1, ^.textAlign := "left", getButtonVul(props.ewVul, props.ewCallback,"ewVul") )
                                          )
                                        )
                                    )
                                )

                            })
                            .build
}
