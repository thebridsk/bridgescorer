var webpack = require('webpack');

var path = require('path');

var _root = path.resolve(__dirname);
function root(args) {
	return path.join( _root, args);
}

// Load the config generated by scalajs-bundler
var config = require('./scalajs.webpack.config');

config.optimization = config.optimization || {}
config.optimization.minimize = false
config.mode = 'development'

// gets rid of error
//    ModuleNotFoundError: Module not found: Error: Can't resolve 'fs' in
config.node = {
	fs: 'empty'
}

// gets rid of warning
//   (Emitted value instead of an instance of Error) Cannot find source file '../src/validateWithCustomRules.ts': Error: Can't resolve
config.module = config.module || {}
config.module.rules = config.module.rules || []
config.module.rules.push(
  {
    test: /\.js$/,
    enforce: "pre",
    loader: "source-map-loader",
    exclude: [/node_modules/ ],
  }
)

// this suppresses the warning
//    Critical dependency: the request of a dependency is an expression
// config.module.exprContextCritical = false

module.exports = config;
