var webpack = require('webpack');

var path = require('path');

var _root = path.resolve(__dirname);
function root(args) {
	args = Array.prototype.slice.call(arguments, 0);
	return path.join.apply(path, [_root].concat(args));
}

// Load the config generated by scalajs-bundler
var config = require('./scalajs.webpack.config');

// config.plugins = [
// 	new webpack.DefinePlugin({
// 	  'process.env': {
// 		    NODE_ENV: JSON.stringify('production')
// 		  }
// 		}),

//     new webpack.optimize.UglifyJsPlugin()
// ]

// gets rid of error
//    ModuleNotFoundError: Module not found: Error: Can't resolve 'fs' in
config.node = {
	fs: 'empty'
}

// gets rid of warning
//   (Emitted value instead of an instance of Error) Cannot find source file '../src/validateWithCustomRules.ts': Error: Can't resolve
// config.module.rules[0].exclude = [
// 	root('node_modules')
// ]

// this suppresses the warning
//    Critical dependency: the request of a dependency is an expression
// config.module.exprContextCritical = false

module.exports = config;
