/* @CHARSET "UTF-8"; */

:root {
  /* Light mode color theme */
  --color-bg: white;                /* must match LightDarkAddOn.light */
  --color-other-bg: rgb(50,54,57);  /* must match LightDarkAddOn.medium */
  --color-other2-bg: black;         /* must match LightDarkAddOn.dark */
  --color-fg: rgb(50,54,57);
  --color2-fg: black;
  --color2-bg: lightgreen;
  --color3-fg: black;
  --color3-bg: aqua;
  --color-table-border: black;
  --color-table-row-alt: #f2f2f2;
  --color-div-border: black;
  --color-default-button: rgb(210,210,210);
  --color-fg-default-button: black;
  --color-button-selected: lightgreen;
  --color-fg-button-selected: black;
  --color-button-required: yellow;
  --color-fg-button-required: black;
  --color-button-required-not-next: lightyellow;
  --color-fg-button-required-not-next: black;
  --color-bg-popupoverlay: black;
  --color-bg-popup: white;
  --color-popup-border: black;
  --color-tooltip-hover: orange;
  --color-bg-appbar: rgb(64,128,64);
  --color-fg-appbar: white;
  --color-appbar-title-shadow: #f00;
  --color-table-cell-gray: rgb(151, 151, 151);
  --color-bg-vulnerable: red;
  --color-bg-not-vulnerable: lightgrey;
  --color-not-vulnerable: gray;
  --color-bg-hand-section-score: cyan;
  --color-hand-section-score: black;
  --color-weblink: rgb(85, 26, 139);
  --shadow-suit-outline: -1px 0px 0 white, 1px 0px 0 white, 0px 1px 0 white, 0px -1px 0 white;
  --color-calendar-off-range: rgb(100,108,114);
  --color-scrollbar-thumb: rgb(140,140,140);
  --color-scrollbar-track: rgb(230,230,230);
  --color-border-combobox: black solid 1px;
  --color-button-border: rgb(140,140,140);
}

@media screen {

  [data-theme="medium"] {
    /* Dark mode color theme */
    --color-bg: rgb(50,54,57);      /* must match light mode --color-other-bg */
    --color-other-bg: black;        /* must match light mode --color-other2-bg */
    --color-other2-bg: white;       /* must match light mode --color-bg */
    --color-fg: rgb(210,210,210);
    --color2-fg: black;
    --color2-bg: lightgreen;
    --color3-fg: black;
    --color3-bg: aqua;
    --color-table-border: rgb(210,210,210);
    --color-table-row-alt: rgb(63,67,70);
    --color-div-border: rgb(210,210,210);
    --color-default-button: rgb(210,210,210);
    --color-fg-default-button: black;
    --color-button-selected: lightgreen;
    --color-fg-button-selected: black;
    --color-button-required: yellow;
    --color-fg-button-required: black;
    --color-button-required-not-next: rgb(255,255,190);
    --color-fg-button-required-not-next: black;
    --color-bg-popupoverlay: black;
    --color-bg-popup: black;
    --color-popup-border: rgb(210,210,210);
    --color-tooltip-hover: orange;
    --color-bg-appbar: rgb(64,128,64);
    --color-fg-appbar: white;
    --color-appbar-title-shadow: #f00;
    --color-table-cell-gray: #606060;
    --color-bg-vulnerable: red;
    --color-bg-not-vulnerable: lightgrey;
    --color-not-vulnerable: gray;
    --color-bg-hand-section-score: cyan;
    --color-hand-section-score: black;
    --color-weblink: cyan;
    --shadow-suit-outline: -1px 0px 0 white, 1px 0px 0 white, 0px 1px 0 white, 0px -1px 0 white;
    --color-calendar-off-range: rgb(100,108,114);
    --color-scrollbar-thumb: var(--color-fg);
    --color-scrollbar-thumb: rgb(80,80,80);
    --color-scrollbar-track: rgb(120,120,120);
    --color-border-combobox: black solid 1px;
    --color-button-border: rgb(140,140,140);
  }

  [data-theme="dark"] {
    --color-bg: black;                /* must match light mode --color-other2-bg */
    --color-other-bg: white;          /* must match light mode --color-bg */
    --color-other2-bg: rgb(50,54,57); /* must match light mode --color-other-bg */
    --color-fg: white;
    --color2-fg: black;
    --color2-bg: lightgreen;
    --color3-fg: black;
    --color3-bg: aqua;
    --color-table-border: rgb(210,210,210);
    --color-table-row-alt: rgb(40,40,40);
    --color-div-border: rgb(210,210,210);
    --color-default-button: rgb(40,40,40);
    --color-fg-default-button: white;
    --color-button-selected: darkgreen;
    --color-fg-button-selected: white;
    --color-button-required: rgb(128,128,0);
    --color-fg-button-required: white;
    --color-button-required-not-next: rgb(64,64,0);
    --color-fg-button-required-not-next: white;
    --color-bg-popupoverlay: rgb(40,40,40);
    --color-bg-popup: black;
    --color-popup-border: rgb(210,210,210);
    --color-tooltip-hover: orange;
    --color-bg-appbar: rgb(64,128,64);
    --color-fg-appbar: white;
    --color-appbar-title-shadow: #f00;
    --color-table-cell-gray: #606060;
    --color-bg-vulnerable: darkred;
    --color-bg-not-vulnerable: rgb(60,60,60);
    --color-not-vulnerable: rgb(210,210,210);
    --color-bg-hand-section-score: darkcyan;
    --color-hand-section-score: white;
    --color-weblink: cyan;
    --shadow-suit-outline: -1px 0px 0 white, 1px 0px 0 white, 0px 1px 0 white, 0px -1px 0 white;
    --color-calendar-off-range: rgb(100,108,114);
    --color-scrollbar-thumb: rgb(120,120,120);
    --color-scrollbar-track: rgb(80,80,80);
    --color-border-combobox: white solid 1px;
    --color-button-border: rgb(140,140,140);
  }

}

/* html {
  overflow: hidden;
} */

body {
  background-color: var(--color-bg);
  color: var(--color-fg);
}

#BridgeAppImport > p > a {
  background-color: var(--color-bg);
  color: var(--color-weblink);
}

* {
  font-family: Arial;
  user-select: none;
}

#ForButtonFonts {
  border-radius: 20px;
  font-size: x-large;
  font-family: arial;
}

.baseAlwaysHide {
  display: none;
}

.baseNotVisible {
  visibility: hidden;
}

.baseCollapse {
  visibility: collapse;
}

@media screen and (orientation: portrait) {
  .baseHideInPortrait {
    display: none;
  }
}

.baseFontTextLarge {
  font-size: x-large;
}

.baseFontTextNormal {
  font-size: larger;
}

.baseColor2 {
  background-color: var(--color2-bg) !important;
  color: var(--color2-fg) !important;
}

.baseColor3 {
  background-color: var(--color3-bg) !important;
  color: var(--color3-fg) !important;
}

.baseDefaultButton {
  border-radius: 20px;
  background-color: var(--color-default-button);
  color: var(--color-fg-default-button);
  border-style: outset;
  border-width: 2px;
  user-select: none;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
}

.baseAppButton {
  white-space: nowrap;
  padding: 3px 6px;
  min-width: 37px;
  margin: 2px;
  font-weight: bold;
  border-color: var(--color-button-border);
}

.baseNameButton {
  border-radius: 25px;
  background-color: var(--color-default-button);
  font-size: x-large;
  white-space: nowrap;
  height: 50px;
  margin: 2px;
  padding: 3px 8px;
  min-width: 50px;
}

.baseFooterButton {
  white-space: nowrap;
  padding: 1px 6px;
  min-width: 5em;
}

.baseAppButton100 {
  width: 100%;
}

.baseButtonSelected {
  background-color: var(--color-button-selected) !important;
  color: var(--color-fg-button-selected) !important;
  border-style: inset !important;
}

label.baseCheckbox {
  white-space: nowrap;
  padding: 0px 6px;
  font-size: x-large;
  margin: 0px;
  margin-left: -11px;
  display: inline-block;
  color: var(--color-fg);
  background-color: inherit;
}

label.baseCheckbox > span:first-child,
label.baseCheckbox > span:first-child > span,
label.baseCheckbox > span:first-child > span > svg
{
  color: var(--color-fg);
  background-color: inherit;
}
label.baseCheckbox > span:first-child {
  padding: 0px 9px;
}
label.baseCheckbox > span:first-child > span > svg
{
  z-index: 1;
}
label.baseCheckbox > span:first-child > span > input
{
  z-index: 2;
}
label.baseCheckbox > span:nth-child(2) > span
{
  font-size: x-large;
}

.baseRadioButton {
  white-space: nowrap;
  padding: 0px 6px;
  font-size: x-large;
  margin: 0px;
  display: inline-block;
  color: var(--color-fg);
  background-color: inherit;
}
label.baseRadioButton > span:first-child,
label.baseRadioButton > span:first-child > span,
label.baseRadioButton > span:first-child > span > div
{
  color: var(--color-fg);
  /* background-color: inherit; */
}
label.baseRadioButton > span:first-child {
  padding: 0px 9px;
}
label.baseRadioButton > span:first-child > span > div
{
  z-index: 1;
}
label.baseRadioButton > span:first-child > span > input
{
  z-index: 2;
}
label.baseRadioButton > span:nth-child(2) > span
{
  font-size: x-large;
}

.baseNormal {
  color: var(--color-fg);
  background-color: var(--color-default-button);
  /* background-color: var(--color-bg); */
}

.baseRequired {
  background-color: var(--color-button-required) !important;
  color: var(--color-fg-button-required) !important;
}

.baseRequiredName {
  background-color: var(--color-button-required) !important;
  color: var(--color-fg-button-required) !important;
  padding: 4px !important;
}

.baseRequiredNotNext {
  background-color: var(--color-button-required-not-next) !important;
  color: var(--color-fg-button-required-not-next) !important;
}

.baseDivPopupOKCancelBody {
  flex: 1 1 auto;
  text-align: center;
  white-space: normal;
  padding: 20px 20px;
}

.baseDivPopupOKCancelDiv {
  display: flex;
  flex-direction: column;
  justify-content: space-between;
  align-items: center;
  width: 100%;
  height: 100%;
  text-align: center;
  padding: 10px;
}

/*
 * to gray out the entire browser page for displaying a popup
*/
.baseDivPopupOverlay {
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  background-color: var(--color-bg-popupoverlay);
  opacity: 0.7;
  z-index: 99999;
  overflow: hidden;

}

/**
 * The div of the popup
 */
.baseDivPopup > div {
  max-width:90%;
  max-height:90%;
  background-color: var(--color-bg-popup);
  border: 2px solid var(--color-popup-border);
  padding: 5px;
  position:absolute;
  top:50%;
  left:50%;
  -ms-transform: translateX(-50%) translateY(-50%);
  -webkit-transform: translate(-50%,-50%);
  transform: translate(-50%,-50%);
}

/**
 * The div of the popup
 */
.baseDivPopup {
  position: fixed;
  left: 0px;
  top: 0px;
  width: 100%;
  height: 100%;
  background-color: transparent;
  z-index: 100000;
}

.baseDivFlexBreak {
  flex: 1 0 100%;
  width: 100%;
}

.baseDivFooter {
  flex: 0 1 100%;
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  align-content: flex-start;
  padding-top: 10px;
  width: 100%;
  max-width: 1050px;
}

.baseDivFooterLeft {
      flex: 1 1 auto;
      min-width: 25%;
      text-align: left;
}

.baseDivFooterCenter {
      flex: 1 1 auto;
      min-width: 25%;
      text-align: center;
}

.baseDivFooterRight {
      flex: 1 1 auto;
      min-width: 25%;
      text-align: right;
}

.baseDivFooterText {
  flex-basis: 100%;
  font-size: larger;
}

.baseDivText100 {
  flex-basis: 100%;
}

@media print {
  .baseHideInPrint {
    display: none;
  }
  /* .baseOnlyInPrint {
  } */
}

@media screen {
  /* .baseHideInPrint {
  } */
  .baseOnlyInPrint {
    display: none;
  }
}

/* .baseHideInPrint {
} */
/* .baseOnlyInPrint {
} */

/* .baseTestPage {
} */

/*
 * Root pages
*/
.rootLogDiv {
  padding: 0px !important;
  overflow: hidden !important;
  display: flex;
  flex-direction: column;
}
.rootLogDiv > div:first-child {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  left: 0;
  z-index: 101;
  width: 100vw;
  background-color: black;
  padding: 8px;
  z-index: 10;
}
.rootLogDiv > div:nth-child(2) {
  padding: 8px;
  overflow: auto;
  font-family: monospace;
  font-size: medium;
  white-space: pre-line;
}
/* .rootLogDiv > div > pre > p {
  font-family: monospace;
  font-size: medium;
} */

.rootHomeDiv {
  display: block;
}

.rootServerDiv {
  display: block;
}

.rootGameDiv {
  display: block;
}

.rootPlayButton {
  margin: 6px;
}

.rootTestHandsDiv {
  display: block;
  margin-top: 10px;
}

.rootMiscDiv {
  display: block;
  margin-top: 10px;
}

.rootAboutPageDiv {
  display: block;
}

.rootThankYouDiv {
  display: flex;
  flex-direction: column;
  align-items: center;
}

.rootThankYouDiv .headerSuitSize {
  font-size: 5rem;
}

.rootInfoPageDiv {
  font-size: x-large;
}

/*
 The following three styles are for creating a table
 with a logical width of 7 columns.  Where the column
 width of the rows are:
  2 3 2
  3 1 3
 */
.tableCellWidth1Of7 {
  width: 14%;
}

.tableCellWidth2Of7 {
  width: 29%;
}

.tableCellWidth3Of7 {
  width: 42%;
}

.tableFloatLeft {
  float: left;
}

.tableFloatRight {
  float: right;
}

.tableWidthPage {
  width: 100%;
}

.rootGraphQLPageDiv .baseDivPopupOKCancelBody {
  text-align: left;
  font-family: monospace;
}

.rootImportsListPageDiv {
  font-size: larger;
}
.rootImportsListPageDiv table {
  border-spacing: 0px;
  font-size: larger;
  border: 1px solid var(--color-table-border);
  margin: 5px;
}
.rootImportsListPageDiv td {
  font-size: larger;
  border: 1px solid var(--color-table-border);
}
.rootImportsListPageDiv th {
  font-size: larger;
  border: 1px solid var(--color-table-border);
}
.rootImportsListPageDiv label {
  font-size: larger;
  border-radius: 20px;
  background-color: var(--color-default-button);
  color: var(--color-fg-default-button);
  border-style: outset;
  border-width: 2px;
  white-space: nowrap;
  padding: 3px 6px;
  min-width: 37px;
  margin: 2px;
}
.rootImportsListPageDiv input {
  font-size: larger;
  border-radius: 20px;
  background-color: var(--color-default-button);
  color: var(--color-fg-default-button);
  border-style: outset;
  border-width: 2px;
  white-space: nowrap;
  padding: 3px 6px;
  min-width: 37px;
  margin: 2px;
}

.rootImportsListPageDiv input[type="file"] {
    width: 0.1px;
    height: 0.1px;
    opacity: 0;
    overflow: hidden;
    position: absolute;
    z-index: -1;
}

/* .rootExportPageDiv {
} */

.rootExportPageDiv > div {
  font-size: x-large;
}

.rootExportPageDiv > div > div {
  width: 1024px;
}

.rootExportPageDiv > div > div > ul {
  columns: 7;
  list-style-type: none;
}

.piechart {
  transform: rotate(-0.25turn);
  display: block;
}
.piechartzero > rect {
  stroke: var(--color-fg);
}

.svgrect {
  display: block;
}

.colorbar > div {
  border: 1px solid var(--color-div-border);
}

.tableComponent {
  border-spacing: 0px;
  font-size: large;
  white-space: nowrap;
  border: 1px solid var(--color-table-border);
  /*
  table-layout: fixed;
  */
}
.tableComponent caption {
  border: 2px solid var(--color-table-border);
  border-bottom: 0px solid var(--color-table-border);
  font-weight: bold;
  font-size: x-large;
}
.tableComponent button#Hidden {
  float: right;
}
.tableComponent button {
  font-size: large;
  font-weight: bold;
}
.tableComponent tbody tr:nth-child(2n+1) {
  background-color: var(--color-table-row-alt);
}
.tableComponent td {
  border: 1px solid var(--color-table-border);
  text-align: center;
  padding: 2px 4px 2px 4px;
}
.tableComponent th {
  border: 1px solid var(--color-table-border);
  text-align: center;
  padding: 2px 4px 2px 4px;
}
.tableComponent tfoot > tr:first-child td {
  border-top: 3px solid var(--color-table-border);
}

/***********
 *  Tooltip stuff
 */

.withTooltipBox {
    position: relative;
}
.withTooltipBox > .tooltipContent {
    visibility: hidden;
    color: var(--color-fg);
    background-color: var(--color-bg);
    padding: 5px;
    border-radius: 6px;
    border: 1px solid var(--color-div-border);

    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 20;
    top: 90%;
    left: 20%;
}
/* Show the tooltip text when you mouse over the tooltip container */
.withTooltipBox:hover > .tooltipContent {
    visibility: visible;
}
body.touched .withTooltipBox:hover > .tooltipContent {
    visibility: visible;
}

.withTooltipBox:hover {
    user-select: auto;
    background-color: var(--color-tooltip-hover);
}

body.touched .withTooltipBox:hover {
    user-select: auto;
    background-color: var(--color-tooltip-hover);
}

/*****
 *  App Stuff
 */
.withTooltipBox {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  align-items: center;
  align-content: center;
}

/* .tooltipContent {
} */

.tooltipContent > div.tooltipBody > div {
  white-space: pre;
  text-align: left;
  padding-left: 5px;
}

.tooltipContent > div.tooltipBody {
  display: flex;
  flex-flow: row nowrap;
  justify-content: left;
  align-items: center;
  align-content: center;
  white-space: pre;
}

.tooltipContent > div.tooltipTitle {
  white-space: pre;
  text-align: left;
  padding-left: 5px;
  width: 100%;
}

.colorbar {
  display: flex;
  flex-flow: row nowrap;
  justify-content: center;
  border: none;
}

.colorbar .tooltipContent {
  white-space: pre;
}

/* .divColorPage {
} */

.divColorPage > div:nth-child(3) {
  padding-top: 5px;
}

.divColorPage div:nth-child(2) td, .divColorPage div:nth-child(2) th {
  white-space: nowrap;
  border: 1px solid var(--color-div-border);
}

.divColorPage div:nth-child(2) table {
  border-spacing: 0px;
  font-size: large;
  white-space: nowrap;
  border: 1px solid var(--color-table-border);
}

.divColorPage div:nth-child(3) td, .divColorPage div:nth-child(3) th {
  white-space: nowrap;
  border: 1px solid var(--color-table-border);
}

.divColorPage div:nth-child(3) table {
  border-spacing: 0px;
  font-size: large;
  white-space: nowrap;
  border: 1px solid var(--color-table-border);
}

.divGraphiql {
  height: 100vh;
}

.homePageTitle {
  margin: 0px 0px 0px 20px !important;
  display: block;
  flex-grow: 1;
  text-align: center;
  line-height: 1 !important;
}

.headerSuitSize {
  font-size: 2.5rem;
  text-shadow: var(--shadow-suit-outline);
}

.mainMenuItem {
  justify-content: space-between !important;
}

.mainMenuItemIcon {
  padding-left: 5px !important;
}

.popupMenu {
  z-index: 200;
}
.popupMenu > div > div
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.popupMenu > div > div li:hover
{
  background-color: rgba(0, 0, 0, 0.2);
}

.appBarTitle {
   display: flex;
   flex-grow: 0;
   flex-wrap: nowrap;
   justify-content: flex-start;
   background-color: inherit;
   align-items: center;
}

.appBarTitleWhenFullscreen {
  width: 75px;
}

*, html {
  -webkit-tap-highlight-color: transparent;
}

button, input, a, li {
  touch-action: manipulation;
}

.divAppBar {
  position: sticky;
  position: -webkit-sticky;
  top: 0;
  left: 0;
  z-index: 100;
  width: 100vw;
}

body {
  margin: 0;
}

.divAppBar > div {
  padding-top: 0 !important;
  flex: 0 0 auto;
}

html, body, body > div, body > div > div, body > div > div > div {
  height: 100%;
  width: 100%;
  max-height: 100%;
  max-width: 100%;
}

body > div > div > div {
  display: flex !important;
  flex-direction: column;;
}

.divAppBar + * {
  flex: 1 0;
  overflow: auto;
  padding: 8px;
}

.muiAppBar {
  color: var(--color-fg-appbar) !important;
  background-color: var(--color-bg-appbar) !important;
}

.muiToolbar {
  min-height: 50px !important;
  padding-left: 8px !important;
  padding-right: 8px !important;
}

.toolbarIcon {
  padding: 12px 6px !important;
}

.divAppBar > div > header > div {
  white-space: nowrap;
}
.divAppBar > div > header > div > h6 {
  overflow: hidden;
}
/* .appBarTitle > div:first-child {
} */
.appBarTitle + div {
  display: flex;
  flex-direction: row;
  overflow: hidden;
  text-shadow: 3px 3px 3px var(--color-appbar-title-shadow);
}

.lightDarkIcon1 {
  fill: var(--color-bg)
}
.lightDarkIcon2 {
  fill: var(--color-other-bg)
}
.lightDarkIcon3 {
  fill: var(--color-other2-bg)
}

.comboboxLightDark
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
  border: var(--color-border-combobox);
}
.comboboxLightDark > span > button
{
  border-left: var(--color-border-combobox);
}
.comboboxLightDark + div
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.comboboxLightDark + div li.rw-list-option
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.comboboxLightDark + div li.rw-list-option:hover
{
  background-color: var(--color-fg-default-button);
  color: var(--color-default-button);
}
.comboboxLightDark + div li.rw-list-option.rw-state-focus
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.comboboxLightDark + div li.rw-list-option.rw-state-selected,
.comboboxLightDark + div li.rw-list-option.rw-state-selected:hover
{
  color: var(--color-fg-default-button);
  background-color: var(--color-button-selected);
}
.comboboxLightDark > input
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.comboboxLightDark > span > button
 {
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
/* doesn't work
input[type="checkbox"], input[type="radio"] {
  color: var(--color-fg-default-button) !important;
  background-color: var(--color-default-button) !important;
} */
.calendarLightDark {
  background-color: var(--color-default-button);
}
.calendarLightDark > input {
  background-color: var(--color-default-button);
  color: var(--color-fg-default-button);
}
.calendarLightDark > span > button {
  background-color: var(--color-default-button);
  color: var(--color-fg-default-button);
}

.calendarLightDark ~ div.rw-popup-container
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-popup-container li.rw-list-option
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-popup-container li.rw-list-option:hover
{
  background-color: var(--color-fg-default-button);
  color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-popup-container li.rw-list-option.rw-state-focus
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-popup-container li.rw-list-option.rw-state-selected,
.calendarLightDark ~ div.rw-popup-container li.rw-list-option.rw-state-selected:hover
{
  color: var(--color-fg-default-button);
  background-color: var(--color-button-selected);
}

.calendarLightDark ~ div.rw-calendar-popup
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-calendar-popup table
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-calendar-popup th
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-calendar-popup td.rw-cell
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-calendar-popup td.rw-cell:hover
{
  background-color: var(--color-fg-default-button);
  color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-calendar-popup td.rw-cell.rw-state-focus
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}
.calendarLightDark ~ div.rw-calendar-popup td.rw-cell.rw-state-selected,
.calendarLightDark ~ div.rw-calendar-popup td.rw-cell.rw-state-selected:hover
{
  color: var(--color-fg-default-button);
  background-color: var(--color-button-selected);
}
.calendarLightDark ~ div.rw-calendar-popup td.rw-cell-off-range
{
  color: var(--color-calendar-off-range);
  background-color: var(--color-default-button);
}

rw-cell-off-range

.calendarLightDark ~ div div.rw-calendar-header,
.calendarLightDark ~ div div.rw-calendar-header button,
.calendarLightDark ~ div div.rw-calendar-footer,
.calendarLightDark ~ div div.rw-calendar-footer button
{
  color: var(--color-fg-default-button);
  background-color: var(--color-default-button);
}

* {
  scrollbar-color: var(--color-scrollbar-thumb) var(--color-scrollbar-track);
}

#ErrorMsg {
  margin-top: 20px;
  background-color: var(--color-button-required) !important;
  color: var(--color-fg-button-required) !important;
}

button[disabled] {
  text-decoration: line-through;
  background: repeating-linear-gradient(-45deg, var(--color-table-cell-gray), var(--color-table-cell-gray) 5px, var(--color-bg) 5px, var(--color-bg) 10px);
}
